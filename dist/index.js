!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r=e();for(var o in r)("object"==typeof exports?exports:t)[o]=r[o]}}(global,(function(){return function(t){var e={};function r(o){if(e[o])return e[o].exports;var s=e[o]={i:o,l:!1,exports:{}};return t[o].call(s.exports,s,s.exports,r),s.l=!0,s.exports}return r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)r.d(o,s,function(e){return t[e]}.bind(null,s));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e){t.exports=require("events")},function(t,e,r){"use strict";function o(t,e,r=[]){let o=[e];for(;(e=Object.getPrototypeOf(e))&&e!==Object.prototype&&e!==Function.prototype;)o.push(e);for(let e of o.reverse())for(let o of Object.getOwnPropertyNames(e))r.includes(o)||Object.defineProperty(t,o,{value:e[o],enumerable:!1,writable:!0})}r.r(e);var s=class{static addMixins(t=[]){for(let e of t)o(this,e,["length","name","arguments","caller","prototype"]),o(this.prototype,new e,["constructor"]);return this}static getClientIdAttr(){return"__cid"}static generateClientId(){return this.__lastClientId=this.__lastClientId?++this.__lastClientId:1}constructor(){Object.defineProperty(this,this.constructor.getClientIdAttr(),{value:this.constructor.generateClientId(),enumerable:!1,writable:!1,configurable:!1})}toJSON(){return this}};var n=class extends s{static getModelConfig(){return{sealProps:!1,smartAssignment:!1,assignmentHooks:!1,initialDataAsProps:!1,lockExtension:!1}}static getIdAttr(){return"_id"}static getDefaultProps(){return null}static getValidators(){return null}static getConverters(){return null}static validate(t,e){const r=this.getValidators();if(r[t])return r[t](e)}static convert(t,e){const r=this.getConverters();if(r[t])return r[t](e)}constructor(t){super(...arguments);const e=this.constructor.getModelConfig();let r=e.initialDataAsProps?t:this.constructor.getDefaultProps();r&&Object.keys(r).forEach(t=>this.__defineProperty(t,r[t],e.smartAssignment,e.assignmentHooks)),e.sealProps&&Object.seal(this),t&&this.setAll(t,!0)}getId(){return this[this.constructor.getIdAttr()]}getClientId(){return this[this.constructor.getClientIdAttr()]}setId(t){return this.set(this.constructor.getIdAttr(),t)}get(t){return this[t]}getAll(){return{...this}}__defineId(t){Object.defineProperty(this,this.constructor.getIdAttr(),{configurable:!0,enumerable:!0,writable:!1,value:t})}__defineProperty(t,e,r,o){const s={value:e,configurable:!0,enumerable:!0,writable:!0};if(r){const e={};s.writable=!1,s.get=()=>e[t],s.set=r=>{o&&this.__hookBeforeSet(t,r);const s=this.prepareSet(t,r);o&&this.__hookAfterSet(s.doSet,t,s.val),s.doSet&&(e[t]=s.val)}}Object.defineProperty(this,t,s)}prepareSet(t,e){const r=this.constructor.getValidators(),o=this.constructor.getConverters();if(r&&r[t]&&!r[t](e))return{doSet:!1,prop:t,val:e};o&&o[t]&&(e=o[t](e));let s=!1;return(!t in this||this[t]!==e)&&(!this.constructor.getModelConfig().sealProps||this.constructor.getDefaultProps()&&this.constructor.getDefaultProps().hasOwnProperty(t)||this.constructor.getIdAttr()===t?s=!0:console.log(`Trying to set unknown property (${t}) on strictProps model`)),{doSet:s,prop:t,val:e}}set(t,e,r=!1){let o=this.constructor.getModelConfig(),s=!1;if(o.smartAssignment)!r&&!o.assignmentHooks&&this.__hookBeforeSet(t,e),this[t]=e,s=this[t]!==e,!r&&!o.assignmentHooks&&this.__hookAfterSet(s,t,this[t]);else{let o=this.prepareSet(t,e);o.doSet&&(!r&&this.__hookBeforeSet(o.prop,o.val),o.prop===this.constructor.getIdAttr()&&void 0===this[o.prop]?this.__defineId(o.val):this[o.prop]=o.val),s=o.doSet,!r&&this.__hookAfterSet(s,o.prop,this[t])}return s}setAll(t={},e=!1){let r={};!e&&this.__hookBeforeSetAll(t);for(let o in t)this.set(o,t[o],e)&&(r[o]=this[o]);return!e&&this.__hookAfterSetAll(r,t),r}unset(t,e=!1){let r=!1;return!e&&this.__hookBeforeUnset(t),t in this&&(delete this[t],r=!0),!e&&this.__hookAfterUnset(r,t),r}__hookAfterConstruct(t){return this}__hookBeforeSet(t,e){return this}__hookAfterSet(t,e,r){return this}__hookBeforeSetAll(t){return this}__hookAfterSetAll(t,e){return this}__hookBeforeUnset(t){return this}__hookAfterUnset(t,e){return this}},i=r(0),a=r.n(i);class c extends a.a{static getEvents(){throw new Error("At least one event must be defined in observable class")}constructor(){super(...arguments),this.__muted=!1}mute(){this.__muted=!0}unMute(){this.__muted=!1}}var l=c;var h=class extends l{constructor(){super(...arguments)}__hookBeforeSet(t,e){return this.emit("before_set",t,e),this}__hookAfterSet(t,e,r){return t&&this.emit("after_set",e,r),this}__hookBeforeSetAll(t){return this.emit("before_set_all",t),this}__hookAfterSetAll(t,e){return t.length&&this.emit("after_set_all",t,e),this}__hookBeforeDelete(){return this}__hookAfterDelete(){return this}};class u extends n{}u.addMixins([h]);var d=u;var f=class{static create(t,e){throw new Error("CREATE method must be implemented in child Adaptor")}static read(t,e){throw new Error("READ method must be implemented in child Adaptor")}static update(t,e,r){throw new Error("UPDATE method must be implemented in child Adaptor")}static delete(t,e){throw new Error("DELETE method must be implemented in child Adaptor")}static getCollectionName(){throw new Error("GetCollectionName method must be implemented in a model/store class")}static async find(t){return await this.read(null,t)}static async findById(t,e){return await this.read(t,e)}async fetch(t){return t=this.getId()||t,this.setAll(await this.constructor.read(t))}async save(t){let e;return e=this.getId()?await this.constructor.update(this.getId(),this,t):await this.constructor.create(this.getAll(),t),this.setAll(e)}async destroy(t){return await this.constructor.delete(id,t)}};var p=class extends f{static create(t={},e={}){return fetch(this.getURL(),{method:e.method||"POST",mode:"same-origin",cache:"default",credentials:"omit",headers:{"Content-Type":"application/json; charset=utf-8"},redirect:"follow",referrer:"client",body:JSON.stringify(t)}).then(t=>{if(t.ok)return t.json();throw new Error("Response is not ok")}).catch(t=>console.log(t))}static read(t,e={}){return fetch(this.getURL(t),{method:e.method||"GET",mode:"same-origin",cache:"default",credentials:"omit",headers:{"Content-Type":"application/json; charset=utf-8"},redirect:"follow",referrer:"client"}).then(t=>{if(t.ok)return t.json();throw new Error("Response is not ok")}).catch(t=>console.log(t))}static update(t,e={},r={}){return fetch(this.getURL(t),{method:r.method||"PUT",mode:"same-origin",cache:"default",credentials:"omit",headers:{"Content-Type":"application/json; charset=utf-8"},redirect:"follow",referrer:"client",body:JSON.stringify(e)}).then(t=>{if(t.ok)return t.json();throw new Error("Response is not ok")}).catch(t=>console.log(t))}static delete(t,e={}){return fetch(this.getURL(t),{method:e.method||"DELETE",mode:"same-origin",cache:"default",credentials:"omit",headers:{"Content-Type":"application/json; charset=utf-8"},redirect:"follow",referrer:"client"}).then(t=>{if(t.ok)return t.json();throw new Error("Response is not ok")}).catch(t=>console.log(t))}static getURL(t){let e="/"+this.getCollectionName();return e=t?e+"/"+t:e,e}};class g extends d{}g.addMixins([p]);var m=g;var _=t=>{class e extends(t||d){}return e.addMixins([p]),e};var b=class extends f{static getMongo(){throw new Error("getMongo must be implemented in child class")}static getDriver(){throw new Error("getDirver must be implemented in child class")}static getIdAttr(){return"_id"}static async create(t,e){return await this.getDriver().insertOne(t).then(t=>({_id:t.insertedId}))}static async read(t,e){if(t){return t=t instanceof this.getMongo().ObjectID?t:(new this.getMongo).ObjectID(t),new this(await this.getDriver().findOne({[this.getIdAttr()]:t}))}return(await this.getDriver().find(e).toArray()).map(t=>new this(t))}static async update(t,e,r){return t=t instanceof this.getMongo().ObjectID?t:(new this.getMongo).ObjectID(t),await this.getDriver().updateOne({[this.getIdAttr()]:t},{$set:e})}static delete(t,e){}};class v extends d{}v.addMixins([b]);var w=v;var y=t=>{class e extends(t||d){}return e.addMixins([b]),e};r.d(e,"Model",(function(){return n})),r.d(e,"ObservableModel",(function(){return d})),r.d(e,"ClientModel",(function(){return m})),r.d(e,"ClientModelWrapper",(function(){return _})),r.d(e,"ServerModel",(function(){return w})),r.d(e,"ServerModelWrapper",(function(){return y}))}])}));